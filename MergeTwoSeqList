package com.nowcoder;

/**合并两个排序链表
 * Created by wuyunlong on 17-11-27.
 */
public class Solution1 {
    public static void main(String[] args){
        //构建两个有序链表
        ListNode head1 = new ListNode(1);
        ListNode node1 = new ListNode(2);
        ListNode node2 = new ListNode(3);
        ListNode node3 = new ListNode(4);
        ListNode node4 = new ListNode(5);
        head1.next=node1;
        node1.next=node2;
        node2.next=node3;
        node3.next=node4;
        ListNode head2 = new ListNode(0);
        ListNode node21 = new ListNode(5);
        ListNode node22 = new ListNode(7);
        ListNode node23 = new ListNode(12);
        head2.next=node21;
        node21.next=node22;
        node22.next=node23;
        ListNode head3 = mergeTwoLists(head1,head2);
        for(int i=0;i<9;i++) {
            System.out.println(head3.val);
            head3=head3.next;
        }

    }
    public static ListNode mergeTwoLists(ListNode l1,ListNode l2){

        ListNode head = new ListNode(0);
        ListNode head3 =head;
        while(l1!=null&&l2!=null){
            if(l1.val < l2.val){
                head3.next = l1;
                l1 = l1.next;
            }else{
                head3.next = l2;
                l2 = l2.next;
            }
            head3 = head3.next;
        }
        if(l1!=null){
            head3.next =l1;
        }else{
            head3.next = l2;
        }
        return head.next;
    }
}
